{"FileType":"Algorithm Dynamics Exported Data","DataType":"Problem","Data":{"Uid":"005f7140-7982-47a6-9ee9-b7b4f1d69e7c","Name":"Roman Look-and-Say","Description":"The Roman *look-and-say* description of a string (of Is, Vs, Xs, Ls, Cs, Ds and Ms) is made by taking each block of adjacent identical letters and replacing it with the number of occurrences of that letter, given in *Roman numerals* (*), followed by the letter itself. A block of adjacent identical letters is never broken into smaller pieces before describing it.\r\rFor example:\r\r- MMXX is described as \u0022two Ms followed by two Xs\u0022. Since two II in Roman numerals, this is written as IIMIIX;\r- IIMIIX is described as IIIIMIIIIX, which is \u0022two Is, one M, two Is, one X\u0022;\r- IIIIMIIIIX is described as IVIIMIVIIX;\r- It is not valid to describe III as, \u0022two Is, one I\u0022 IIIIII.\r\rNote that Roman look-and-say descriptions are not necessarily Roman numerals.\r\rWrite a program that reads in a Roman numeral representing a number between 1 and 3999 inclusive, followed by n (1 \u003C= n \u003C= 50).\r\rYou should apply the *Roman look-and-say* description n times and then output the number of Is in the final description, followed by the number of Vs.","TimeLimit":1000,"MemoryLimit":16777216,"Difficulty":1,"TestCases":[{"Input":"MMXX 1","Output":"4 0","IsExample":true},{"Input":"C 1","Output":"1 0","IsExample":false},{"Input":"V 1","Output":"1 1","IsExample":false},{"Input":"III 2","Output":"2 1","IsExample":false},{"Input":"I 7","Output":"6 2","IsExample":false},{"Input":"MMXX 8","Output":"30 12","IsExample":false},{"Input":"II 20","Output":"101 37","IsExample":false},{"Input":"IV 20","Output":"121 46","IsExample":false},{"Input":"MDCLX 30","Output":"1795 695","IsExample":false},{"Input":"M 50","Output":"2858 1103","IsExample":false},{"Input":"V 50","Output":"2858 1104","IsExample":false},{"Input":"MMDCCCLXXXVIII 50","Output":"19013 7333","IsExample":false}],"Tags":[{"Name":"BIO 2020"}]}}