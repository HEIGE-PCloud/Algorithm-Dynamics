classDiagram
    class Tag{
        +int Id
        +string Name
        +Tag()
    }
    class TestCase{
        +int Id
        +string Input
        +string Output
        +bool IsExample
        +TestCase()
    }
    class Problem{
        +int Id
        +string Name
        +Status Status
        +Difficulty Difficulty
        +string Description
        +int TimeLimit
        +int MemoryLimit
        +List<TestCase> TestCases
        +List<Tag> Tags
        +string SourceHash
        +Problem()
    }
    class ProblemList{
        +int Id
        +string Name
        +string Description
        +List<Problem> Problems
        +ProblemList()
    }
    class Assignment{
        +Guid Uid
        +DateTime DueDate
        +Status Status
        +Type Type
        +User Assigner
        +Assignment()
    }
    class Submission{
        +int Id
        +Problem Problem
        +string Code
        +DateTime SubmittedTime
        +Language Language
        +User Submitter
        +Submission()
    }
    class RunCodeResult {
        +string StandardOutput
        +string StandardError
        +int ExitCode
        +int CPUTime
        +int MemoryUsage
        +ResultCode ResultCode
        +RunCodeResult()
    }
    class TestCaseResult {
        +int Id
        +TestCase TestCase
        +TestCaseResult()
    }
    class SubmissionResult{
        +int Id
        +Submission Submission
        +List<TestCaseResults> Results
        +SubmissionResult()
    }
    class AssignmentSubmission{
        +Guid Uid
        +User Submitter
        +Assignment Assignment
        +Status Status
        +List<Submission> Submissions
        +AssignmentSubmission()
    }
    class AssignmentSubmissionResult{
        +Guid Uid
        +AssignmentSubmission AssignmentSubmission
        +List<SubmissionResult> Results
        +AssignmentSubmissionResult()
    }
    class Judger{
        -static string _StandardOutput
        -static string _StandardError
        -static string _CompilationOutput
        -static string _CompilationError
        -static string _SourceCodeFilePath
        -static string _SourceCodeFolderPath
        -static string _ExecutableFilePath
        -static StatusCode _StatusCode
        +static void SetSourceCodeFilePath()
        +async static Task<SubmissionResult> RunCode()
        +async static Task<SubmissionResult> JudgeTestCase()
        +async static Task<SubmissionResult> JudgeProblem()
        +async static Task<AssignmentSubmission> JudgeAssignment()
        -async static Task<int> Compile()
        -async static Task<int> Execute()
        -static void CompileProcess_OutputDataReceived()
        -static void CompileProcess_ErrorDataReceived()
        -static void ExecuteProcess_Exited()
        -static void ExecuteProcess_OutputDataReceived()
        -static void ExecuteProcess_ErrorDataReceived()
    }
    class User{
        +Guid Uid
        +string Name
        +string Email
        +Role Role
        +User()
    }
    class Language{
        +string Name
        +bool NeedCompile
        +string CompileCommand
        +string CompileArguments
        +string RunCommand
        +string RunArguments
        +Language()
    }
    ProblemList <|-- Assignment: Inheritance
    Submission --> Judger: Submit to a Judger
    Judger -->  SubmissionResult: Return as the result
    Problem <--> Tag:Many to many
    Problem --> TestCase:One to many
    Problem --> Submission:One to many
    Language --> Submission
    ProblemList <--> Problem:Many to many
    Assignment <--> Problem:Many to many
    User --> Submission:Create
    User --> Assignment:Create
    User --> AssignmentSubmission:Create
    AssignmentSubmission --> Judger: Submit to a Judger
    Judger -->  AssignmentSubmissionResult: Return as the result
    RunCodeResult <|-- TestCaseResult: Inheritance
    TestCaseResult --> SubmissionResult: One to many
